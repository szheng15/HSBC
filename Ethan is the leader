import java.util.*;

public class Solution {
    public static int findMinimumProjects(int[] errorScore, int compP, int othQ) {
        int projects = 0;
        int n = errorScore.length;
        
        // Continue until all scores are zero
        while (true) {
            // Check if all scores are zero
            boolean allZero = true;
            for (int score : errorScore) {
                if (score &gt; 0) {
                    allZero = false;
                    break;
                }
            }
            if (allZero) break;
            
            // Find member with maximum score
            int maxScore = 0;
            int maxIndex = 0;
            for (int i = 0; i &lt; n; i++) {
                if (errorScore[i] &gt; maxScore) {
                    maxScore = errorScore[i];
                    maxIndex = i;
                }
            }
            
            // Update scores
            errorScore[maxIndex] = Math.max(0, errorScore[maxIndex] - compP);
            for (int i = 0; i &lt; n; i++) {
                if (i != maxIndex && errorScore[i] &gt; 0) {
                    errorScore[i] = Math.max(0, errorScore[i] - othQ);
                }
            }
            
            projects++;
        }
        
        return projects;
    }

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Input
        int errorScore_size = scanner.nextInt();
        int[] errorScore = new int[errorScore_size];
        
        for (int i = 0; i &lt; errorScore_size; i++) {
            errorScore[i] = scanner.nextInt();
        }
        
        int compP = scanner.nextInt();
        int othQ = scanner.nextInt();
        
        // Calculate and print result
        int result = findMinimumProjects(errorScore, compP, othQ);
        System.out.println(result);
        
        scanner.close();
    }
}


def min_projects_to_zero(errorScore_size, errorScore, compP, othQ):
    # 初始化项目计数
    project_count = 0
    
    # 持续执行直到所有错误分数为零
    while any(score > 0 for score in errorScore):
        # 按降序排列错误分数
        errorScore.sort(reverse=True)
        
        # 减少错误分数最高的成员的分数
        if errorScore[0] > 0:
            errorScore[0] -= compP
        
        # 减少其他成员的错误分数
        for i in range(1, errorScore_size):
            if errorScore[i] > 0:
                errorScore[i] -= othQ
        
        # 确保错误分数不低于零
        errorScore = [max(0, score) for score in errorScore]
        
        # 增加项目计数
        project_count += 1
    
    return project_count

# 输入处理
if __name__ == "__main__":
    # 输入团队成员数量
    errorScore_size = int(input())
    
    # 输入错误分数列表
    errorScore = list(map(int, input().split()))
    
    # 输入 P 和 Q
    compP = int(input())
    othQ = int(input())
    
    # 计算最少项目数
    result = min_projects_to_zero(errorScore_size, errorScore, compP, othQ)
    
    # 输出结果
    print(result)
